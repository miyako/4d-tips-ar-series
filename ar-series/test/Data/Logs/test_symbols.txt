08/04/21	14:15インタープロセス変数サイズ：12プロセス変数サイズ：216	(M)  AR$BARCODE	Object		$CONST	Object		$EXPORT	Object		$ERROR	コレクション		$CONTROLS	Object		$0	Object			(M)  append_as_text$i	実数		$value	テキスト		$maxLength	実数		$byte	実数		$0	Object		$1	ポインター		$2	バリアント		$3	倍長整数			(M)  parse_response$BCC	BLOB		$status	Object		$responseLength	実数		$i	実数		$data	BLOB		$requestLength	実数		$request	BLOB		$response	BLOB		$void	BLOB		$error	バリアント		$0	Object		$1	BLOB		$2	BLOB			(M)  hex_to_data$i	実数		$data	BLOB		$byte	BLOB		$pos	倍長整数		$len	倍長整数		$0	BLOB		$1	テキスト		$ascii	テキスト			(M)  close_data$0	Object		$1	ポインター			(M)  generic_error_method$i	実数		$errorStack	コレクション		$logFile	バリアント		$messages	テキスト	1 次元	$stack	Object		$components	テキスト	1 次元	$logsFolder	Object		$codes	倍長整数	1 次元	$log	バリアント		$error	Object		$docRef	時間			(M)  TEST_send$status	バリアント		$AR	Object			(M)  data_to_hex$i	実数		$value	テキスト		$hex	テキスト		$byte	実数		$0	テキスト		$1	BLOB			(M)  append_data_with_size$valueType	実数		$i	実数		$value	BLOB		$maxLength	実数		$byte	実数		$len	実数		$1	ポインター		$2	バリアント		$3	倍長整数			(M)  TEST$status	Object		$options	Object		$request	BLOB		$response	BLOB			(M)  int_to_hex$digits	倍長整数		$hex	テキスト		$int	倍長整数		$0	テキスト		$1	倍長整数		$2	倍長整数			(M)  append_data$valueType	実数		$bytes	BLOB		$byte	BLOB		$0	Object		$1	ポインター		$2	バリアント			(M)  append_as_numeric$i	実数		$value	テキスト		$0	Object		$1	ポインター		$2	実数			(M)  make_request$6	バリアント		$command	倍長整数		$i	実数		$option	テキスト		$data	BLOB		$value	テキスト		$barcodeType	実数		$countParams	実数		$request	BLOB		${2}	バリアント		$0	BLOB		$1	倍長整数		$2	バリアント		$3	バリアント		$4	バリアント		$5	バリアント			(M)  TEST_barcode$barcode	BLOB		$request	BLOB		$AR	Object			(M)  exec$6	バリアント		$status	Object		$command	倍長整数		$countParams	実数		$options	Object		$request	BLOB		$response	BLOB		${2}	バリアント		$0	Object		$1	倍長整数		$2	バリアント		$3	バリアント		$4	バリアント		$5	バリアント			(M)  data_to_text$value	テキスト		$0	テキスト		$1	BLOB			(M)  TEST_protocol$status	バリアント		$data	バリアント		$request	バリアント		$AR	Object		$response	BLOB			(M)  append_as_code128$valueType	実数		$i	実数		$value	BLOB		$maxLength	実数		$byte	実数		$len	実数		$0	Object		$1	ポインター		$2	バリアント		$3	実数			(M)  ascii_to_data$i	実数		$data	BLOB		$byte	BLOB		$pos	倍長整数		$len	倍長整数		$0	BLOB		$1	テキスト		$ascii	テキスト			(M)  TEST_bitmap$hex	テキスト		$bits	テキスト			(M)  get_xor$BCC	BLOB		$i	実数		$data	BLOB		$0	倍長整数		$1	BLOB			(M)  bits_to_data$i	実数		$j	実数		$data	BLOB		$value	テキスト		$byte	BLOB		$pos	倍長整数		$len	倍長整数		$0	BLOB		$1	テキスト		$bits	テキスト			(M)  get_option$command	倍長整数		$options	Object		$0	Object		$1	倍長整数		関数 AR:Object, called 3 times, Thread Safe関数 append_as_text(ポインター;バリアント;倍長整数):Object, called 1 times, Thread Safe関数 parse_response(BLOB;BLOB):Object, called 1 times, Thread Safe関数 hex_to_data(テキスト):BLOB, called 1 times, Thread Safe関数 close_data(ポインター):Object, called 1 times, Thread Safeメソッド generic_error_method, not called, Thread Safeメソッド TEST_send, not called, Thread Safe関数 data_to_hex(BLOB):テキスト, called 3 times, Thread Safeメソッド append_data_with_size(ポインター;バリアント;倍長整数), called 1 times, Thread Safeメソッド TEST, not called, Thread Safe関数 int_to_hex(倍長整数;倍長整数):テキスト, called 2 times, Thread Safe関数 append_data(ポインター;バリアント):Object, called 1 times, Thread Safe関数 append_as_numeric(ポインター;実数):Object, called 1 times, Thread Safe関数 make_request(倍長整数):BLOB, called 20 times, Thread Safeメソッド TEST_barcode, not called, Thread Safe関数 exec(倍長整数):Object, called 38 times, Thread Safe関数 data_to_text(BLOB):テキスト, not called, Thread Safeメソッド TEST_protocol, not called, Thread Safe関数 append_as_code128(ポインター;バリアント;実数):Object, called 2 times, Thread Safe関数 ascii_to_data(テキスト):BLOB, called 1 times, Thread Safeメソッド TEST_bitmap, not called, Thread Safe関数 get_xor(BLOB):倍長整数, called 1 times, Thread Safe関数 bits_to_data(テキスト):BLOB, called 2 times, Thread Safe関数 get_option(倍長整数):Object, called 1 times, Thread Safe